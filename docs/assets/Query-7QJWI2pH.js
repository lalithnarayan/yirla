const g="data:text/markdown;base64,YGBganN4DQppbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VSZWYsIENoYW5nZUV2ZW50IH0gZnJvbSAncmVhY3QnDQppbXBvcnQgQnV0dG9uIGZyb20gJ0AvY29tcG9uZW50cy91aS9CdXR0b24nDQppbXBvcnQgSW5wdXQgZnJvbSAnQC9jb21wb25lbnRzL3VpL0lucHV0Jw0KaW1wb3J0IERhdGFUYWJsZSBmcm9tICdAL2NvbXBvbmVudHMvc2hhcmVkL0RhdGFUYWJsZScNCmltcG9ydCBkZWJvdW5jZSBmcm9tICdsb2Rhc2gvZGVib3VuY2UnDQppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnDQppbXBvcnQgdHlwZSB7IENvbHVtbkRlZiwgT25Tb3J0UGFyYW0sIENlbGxDb250ZXh0IH0gZnJvbSAnQC9jb21wb25lbnRzL3NoYXJlZC9EYXRhVGFibGUnDQoNCnR5cGUgQ3VzdG9tZXIgPSB7DQogICAgaWQ6IHN0cmluZzsNCiAgICBuYW1lOiBzdHJpbmc7DQogICAgZW1haWw6IHN0cmluZzsNCn0NCg0KY29uc3QgUXVlcnkgPSAoKSA9PiB7DQogICAgY29uc3QgW2RhdGEsIHNldERhdGFdID0gdXNlU3RhdGUoW10pDQogICAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUoZmFsc2UpDQogICAgY29uc3QgW3RhYmxlRGF0YSwgc2V0VGFibGVEYXRhXSA9IHVzZVN0YXRlPHsNCiAgICAgICAgcGFnZUluZGV4OiBudW1iZXINCiAgICAgICAgcGFnZVNpemU6IG51bWJlcg0KICAgICAgICBzb3J0OiB7DQogICAgICAgICAgICBvcmRlcjogJycgfCAnYXNjJyB8ICdkZXNjJw0KICAgICAgICAgICAga2V5OiBzdHJpbmcgfCBudW1iZXI7DQogICAgICAgIH07DQogICAgICAgIHF1ZXJ5OiBzdHJpbmcNCiAgICAgICAgdG90YWw6IG51bWJlcg0KICAgIH0+KHsNCiAgICAgICAgdG90YWw6IDAsDQogICAgICAgIHBhZ2VJbmRleDogMSwNCiAgICAgICAgcGFnZVNpemU6IDEwLA0KICAgICAgICBxdWVyeTogJycsDQogICAgICAgIHNvcnQ6IHsNCiAgICAgICAgICAgIG9yZGVyOiAnJywNCiAgICAgICAgICAgIGtleTogJycsDQogICAgICAgIH0sDQogICAgfSkNCg0KICAgIGNvbnN0IGlucHV0UmVmID0gdXNlUmVmKG51bGwpDQoNCiAgICBjb25zdCBkZWJvdW5jZUZuID0gZGVib3VuY2UoaGFuZGxlRGVib3VuY2VGbiwgNTAwKQ0KDQogICAgZnVuY3Rpb24gaGFuZGxlRGVib3VuY2VGbih2YWw6IHN0cmluZykgew0KICAgICAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ3N0cmluZycgJiYgKHZhbC5sZW5ndGggPiAxIHx8IHZhbC5sZW5ndGggPT09IDApKSB7DQogICAgICAgICAgICBzZXRUYWJsZURhdGEoKHByZXZEYXRhKSA9PiAoew0KICAgICAgICAgICAgICAgIC4uLnByZXZEYXRhLA0KICAgICAgICAgICAgICAgIC4uLnsgcXVlcnk6IHZhbCwgcGFnZUluZGV4OiAxIH0sDQogICAgICAgICAgICB9KSkNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIGNvbnN0IGhhbmRsZUNoYW5nZSA9IChlOiBDaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4gew0KICAgICAgICBkZWJvdW5jZUZuKGUudGFyZ2V0LnZhbHVlKQ0KICAgIH0NCg0KICAgIGNvbnN0IGhhbmRsZUFjdGlvbiA9IChjZWxsUHJvcHM6IENlbGxDb250ZXh0PEN1c3RvbWVyLCB1bmtub3duPikgPT4gew0KICAgICAgICBjb25zb2xlLmxvZygnQWN0aW9uIGNsaWNrZWQnLCBjZWxsUHJvcHMpDQogICAgfQ0KDQogICAgY29uc3QgY29sdW1uczogQ29sdW1uRGVmPEN1c3RvbWVyPltdID0gWw0KICAgICAgICB7DQogICAgICAgICAgICBoZWFkZXI6ICdOYW1lJywNCiAgICAgICAgICAgIGFjY2Vzc29yS2V5OiAnbmFtZScsDQogICAgICAgIH0sDQogICAgICAgIHsNCiAgICAgICAgICAgIGhlYWRlcjogJ0VtYWlsJywNCiAgICAgICAgICAgIGFjY2Vzc29yS2V5OiAnZW1haWwnLA0KICAgICAgICB9LA0KICAgICAgICB7DQogICAgICAgICAgICBoZWFkZXI6ICcnLA0KICAgICAgICAgICAgaWQ6ICdhY3Rpb24nLA0KICAgICAgICAgICAgY2VsbDogKHByb3BzKSA9PiAoDQogICAgICAgICAgICAgICAgPEJ1dHRvbiBzaXplPSJ4cyIgb25DbGljaz17KCkgPT4gaGFuZGxlQWN0aW9uKHByb3BzKX0+DQogICAgICAgICAgICAgICAgICAgIEFjdGlvbg0KICAgICAgICAgICAgICAgIDwvQnV0dG9uPg0KICAgICAgICAgICAgKSwNCiAgICAgICAgfSwNCiAgICBdDQoNCiAgICBjb25zdCBoYW5kbGVQYWdpbmF0aW9uQ2hhbmdlID0gKHBhZ2VJbmRleDogbnVtYmVyKSA9PiB7DQogICAgICAgIHNldFRhYmxlRGF0YSgocHJldkRhdGEpID0+ICh7IC4uLnByZXZEYXRhLCAuLi57IHBhZ2VJbmRleCB9IH0pKQ0KICAgIH0NCg0KICAgIGNvbnN0IGhhbmRsZVNlbGVjdENoYW5nZSA9IChwYWdlU2l6ZTogbnVtYmVyKSA9PiB7DQogICAgICAgIHNldFRhYmxlRGF0YSgocHJldkRhdGEpID0+ICh7IC4uLnByZXZEYXRhLCAuLi57IHBhZ2VTaXplIH0gfSkpDQogICAgfQ0KDQogICAgY29uc3QgaGFuZGxlU29ydCA9ICh7IG9yZGVyLCBrZXkgfTogT25Tb3J0UGFyYW0pID0+IHsNCiAgICAgICAgY29uc29sZS5sb2coeyBvcmRlciwga2V5IH0pDQogICAgICAgIHNldFRhYmxlRGF0YSgocHJldkRhdGEpID0+ICh7DQogICAgICAgICAgICAuLi5wcmV2RGF0YSwNCiAgICAgICAgICAgIC4uLnsgc29ydDogeyBvcmRlciwga2V5IH0gfSwNCiAgICAgICAgfSkpDQogICAgfQ0KDQogICAgdXNlRWZmZWN0KCgpID0+IHsNCiAgICAgICAgY29uc3QgZmV0Y2hEYXRhID0gYXN5bmMgKCkgPT4gew0KICAgICAgICAgICAgc2V0TG9hZGluZyh0cnVlKQ0KICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0KCcvYXBpL2NybS9jdXN0b21lcnMnLCB0YWJsZURhdGEpDQogICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YSkgew0KICAgICAgICAgICAgICAgIHNldERhdGEocmVzcG9uc2UuZGF0YS5kYXRhKQ0KICAgICAgICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpDQogICAgICAgICAgICAgICAgc2V0VGFibGVEYXRhKChwcmV2RGF0YSkgPT4gKHsNCiAgICAgICAgICAgICAgICAgICAgLi4ucHJldkRhdGEsDQogICAgICAgICAgICAgICAgICAgIC4uLnsgdG90YWw6IHJlc3BvbnNlLmRhdGEudG90YWwgfSwNCiAgICAgICAgICAgICAgICB9KSkNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICBmZXRjaERhdGEoKQ0KICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzDQogICAgfSwgWw0KICAgICAgICB0YWJsZURhdGEucGFnZUluZGV4LA0KICAgICAgICB0YWJsZURhdGEuc29ydCwNCiAgICAgICAgdGFibGVEYXRhLnBhZ2VTaXplLA0KICAgICAgICB0YWJsZURhdGEucXVlcnksDQogICAgXSkNCg0KICAgIHJldHVybiAoDQogICAgICAgIDw+DQogICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0iZmxleCBqdXN0aWZ5LWVuZCBtYi00Ij4NCiAgICAgICAgICAgICAgICA8SW5wdXQNCiAgICAgICAgICAgICAgICAgICAgcmVmPXtpbnB1dFJlZn0NCiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IlNlYXJjaC4uLiINCiAgICAgICAgICAgICAgICAgICAgc2l6ZT0ic20iDQogICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0ibGc6dy01MiINCiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZX0NCiAgICAgICAgICAgICAgICAvPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8RGF0YVRhYmxlDQogICAgICAgICAgICAgICAgY29sdW1ucz17Y29sdW1uc30NCiAgICAgICAgICAgICAgICBkYXRhPXtkYXRhfQ0KICAgICAgICAgICAgICAgIGxvYWRpbmc9e2xvYWRpbmd9DQogICAgICAgICAgICAgICAgcGFnaW5nRGF0YT17dGFibGVEYXRhfQ0KICAgICAgICAgICAgICAgIG9uUGFnaW5hdGlvbkNoYW5nZT17aGFuZGxlUGFnaW5hdGlvbkNoYW5nZX0NCiAgICAgICAgICAgICAgICBvblNlbGVjdENoYW5nZT17aGFuZGxlU2VsZWN0Q2hhbmdlfQ0KICAgICAgICAgICAgICAgIG9uU29ydD17aGFuZGxlU29ydH0NCiAgICAgICAgICAgIC8+DQogICAgICAgIDwvPg0KICAgICkNCn0NCg0KZXhwb3J0IGRlZmF1bHQgUXVlcnkNCmBgYA0K";export{g as default};
