const g="data:text/markdown;base64,YGBganN4DQppbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnDQppbXBvcnQgQXZhdGFyIGZyb20gJ0AvY29tcG9uZW50cy91aS9BdmF0YXInDQppbXBvcnQgU2VsZWN0IGZyb20gJ0AvY29tcG9uZW50cy91aS9TZWxlY3QnDQppbXBvcnQgeyBIaUNoZWNrIH0gZnJvbSAncmVhY3QtaWNvbnMvaGknDQppbXBvcnQgeyBjb21wb25lbnRzIH0gZnJvbSAncmVhY3Qtc2VsZWN0Jw0KDQpjb25zdCB7IE11bHRpVmFsdWVMYWJlbCwgQ29udHJvbCB9ID0gY29tcG9uZW50cw0KDQpjb25zdCBjb3VudHJ5T3B0aW9ucyA9IFsNCiAgICB7IHZhbHVlOiAndXMnLCBsYWJlbDogJ1VuaXRlZCBTdGF0ZScsIGltZ1BhdGg6ICcvaW1nL2NvdW50cmllcy91cy5wbmcnIH0sDQogICAgeyB2YWx1ZTogJ2NuJywgbGFiZWw6ICdDaGluYScsIGltZ1BhdGg6ICcvaW1nL2NvdW50cmllcy9jbi5wbmcnIH0sDQogICAgeyB2YWx1ZTogJ2pwJywgbGFiZWw6ICdKYXBhbicsIGltZ1BhdGg6ICcvaW1nL2NvdW50cmllcy9qcC5wbmcnIH0sDQogICAgeyB2YWx1ZTogJ2ZyJywgbGFiZWw6ICdGcmVuY2gnLCBpbWdQYXRoOiAnL2ltZy9jb3VudHJpZXMvZnIucG5nJyB9LA0KXQ0KDQpjb25zdCBDdXN0b21TZWxlY3RPcHRpb24gPSAoeyBpbm5lclByb3BzLCBsYWJlbCwgZGF0YSwgaXNTZWxlY3RlZCB9KSA9PiB7DQogICAgcmV0dXJuICgNCiAgICAgICAgPGRpdg0KICAgICAgICAgICAgY2xhc3NOYW1lPXtgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHAtMiAkew0KICAgICAgICAgICAgICAgIGlzU2VsZWN0ZWQNCiAgICAgICAgICAgICAgICAgICAgPyAnYmctZ3JheS0xMDAgZGFyazpiZy1ncmF5LTUwMCcNCiAgICAgICAgICAgICAgICAgICAgOiAnaG92ZXI6YmctZ3JheS01MCBkYXJrOmhvdmVyOmJnLWdyYXktNjAwJw0KICAgICAgICAgICAgfWB9DQogICAgICAgICAgICB7Li4uaW5uZXJQcm9wc30NCiAgICAgICAgPg0KICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImZsZXggaXRlbXMtY2VudGVyIj4NCiAgICAgICAgICAgICAgICA8QXZhdGFyIHNoYXBlPSJjaXJjbGUiIHNpemU9ezIwfSBzcmM9e2RhdGEuaW1nUGF0aH0gLz4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9Im1sLTIgcnRsOm1yLTIiPntsYWJlbH08L3NwYW4+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIHtpc1NlbGVjdGVkICYmIDxIaUNoZWNrIGNsYXNzTmFtZT0idGV4dC1lbWVyYWxkLTUwMCB0ZXh0LXhsIiAvPn0NCiAgICAgICAgPC9kaXY+DQogICAgKQ0KfQ0KDQpjb25zdCBDdXN0b21Db250cm9sID0gKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+IHsNCiAgICBjb25zdCBzZWxlY3RlZCA9IHByb3BzLmdldFZhbHVlKClbMF0NCiAgICByZXR1cm4gKA0KICAgICAgICA8Q29udHJvbCB7Li4ucHJvcHN9Pg0KICAgICAgICAgICAge3NlbGVjdGVkICYmICgNCiAgICAgICAgICAgICAgICA8QXZhdGFyDQogICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0ibHRyOm1sLTQgcnRsOm1yLTQiDQogICAgICAgICAgICAgICAgICAgIHNoYXBlPSJjaXJjbGUiDQogICAgICAgICAgICAgICAgICAgIHNpemU9ezE4fQ0KICAgICAgICAgICAgICAgICAgICBzcmM9e3NlbGVjdGVkLmltZ1BhdGh9DQogICAgICAgICAgICAgICAgLz4NCiAgICAgICAgICAgICl9DQogICAgICAgICAgICB7Y2hpbGRyZW59DQogICAgICAgIDwvQ29udHJvbD4NCiAgICApDQp9DQoNCmNvbnN0IEN1c3RvbUNvbnRyb2xNdWx0aSA9ICh7IGNoaWxkcmVuLCBkYXRhLCAuLi5wcm9wcyB9KSA9PiB7DQogICAgY29uc3QgeyBpbWdQYXRoIH0gPSBkYXRhDQogICAgcmV0dXJuICgNCiAgICAgICAgPE11bHRpVmFsdWVMYWJlbCB7Li4ucHJvcHN9Pg0KICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9ImlubGluZS1mbGV4IGl0ZW1zLWNlbnRlciI+DQogICAgICAgICAgICAgICAgPEF2YXRhcg0KICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9Im1yLTIgcnRsOm1sLTIiDQogICAgICAgICAgICAgICAgICAgIHNoYXBlPSJjaXJjbGUiDQogICAgICAgICAgICAgICAgICAgIHNpemU9ezE1fQ0KICAgICAgICAgICAgICAgICAgICBzcmM9e2ltZ1BhdGh9DQogICAgICAgICAgICAgICAgLz4NCiAgICAgICAgICAgICAgICB7Y2hpbGRyZW59DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9NdWx0aVZhbHVlTGFiZWw+DQogICAgKQ0KfQ0KY29uc3QgQ3VzdG9tID0gKCkgPT4gew0KICAgIHJldHVybiAoDQogICAgICAgIDxkaXY+DQogICAgICAgICAgICA8U2VsZWN0DQogICAgICAgICAgICAgICAgb3B0aW9ucz17Y291bnRyeU9wdGlvbnN9DQogICAgICAgICAgICAgICAgY29tcG9uZW50cz17ew0KICAgICAgICAgICAgICAgICAgICBPcHRpb246IEN1c3RvbVNlbGVjdE9wdGlvbiwNCiAgICAgICAgICAgICAgICAgICAgQ29udHJvbDogQ3VzdG9tQ29udHJvbCwNCiAgICAgICAgICAgICAgICB9fQ0KICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT17Y291bnRyeU9wdGlvbnNbMF19DQogICAgICAgICAgICAgICAgY2xhc3NOYW1lPSJtYi00Ig0KICAgICAgICAgICAgLz4NCiAgICAgICAgICAgIDxTZWxlY3QNCiAgICAgICAgICAgICAgICBpc011bHRpDQogICAgICAgICAgICAgICAgb3B0aW9ucz17Y291bnRyeU9wdGlvbnN9DQogICAgICAgICAgICAgICAgY29tcG9uZW50cz17ew0KICAgICAgICAgICAgICAgICAgICBPcHRpb246IEN1c3RvbVNlbGVjdE9wdGlvbiwNCiAgICAgICAgICAgICAgICAgICAgTXVsdGlWYWx1ZUxhYmVsOiBDdXN0b21Db250cm9sTXVsdGksDQogICAgICAgICAgICAgICAgfX0NCiAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU9e1tjb3VudHJ5T3B0aW9uc1sxXSwgY291bnRyeU9wdGlvbnNbMl1dfQ0KICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0ibWItNCINCiAgICAgICAgICAgIC8+DQogICAgICAgIDwvZGl2Pg0KICAgICkNCn0NCg0KZXhwb3J0IGRlZmF1bHQgQ3VzdG9tDQpgYGANCg==";export{g as default};
